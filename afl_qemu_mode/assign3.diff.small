Only in afl-2.33b/qemu_mode: build_qemu_support.sh
Only in afl-2.33b/qemu_mode: patches
Only in afl-2.33b/qemu_mode/qemu-2.3.0: config-all-devices.mak
Only in afl-2.33b/qemu_mode/qemu-2.3.0: config-all-disas.mak
Only in afl-2.33b/qemu_mode/qemu-2.3.0: config-host.h
Only in afl-2.33b/qemu_mode/qemu-2.3.0: config-host.mak
Only in afl-2.33b/qemu_mode/qemu-2.3.0: config.log
Only in afl-2.33b/qemu_mode/qemu-2.3.0: config.status
diff -u -x '*.[o|d]' -x '*timestamp' -x '*.lo' -r /tmp/tmp.lR39PlUDZv/qemu-2.3.0/cpu-exec.c afl-2.33b/qemu_mode/qemu-2.3.0/cpu-exec.c
--- /tmp/tmp.lR39PlUDZv/qemu-2.3.0/cpu-exec.c	2015-04-27 14:08:23.000000000 +0000
+++ afl-2.33b/qemu_mode/qemu-2.3.0/cpu-exec.c	2019-12-07 08:24:28.879131185 +0000
@@ -28,6 +28,8 @@
 #include "exec/memory-internal.h"
 #include "qemu/rcu.h"
 
+#include "../patches/afl-qemu-cpu-inl.h"
+
 /* -icount align implementation. */
 
 typedef struct SyncClocks {
@@ -296,8 +298,11 @@
     }
  not_found:
    /* if no translated code available, then translate it now */
+
     tb = tb_gen_code(cpu, pc, cs_base, flags, 0);
 
+    AFL_QEMU_CPU_SNIPPET1;
+
  found:
     /* Move the last found TB to the head of the list */
     if (likely(*ptb1)) {
@@ -492,6 +497,9 @@
                     next_tb = 0;
                     tcg_ctx.tb_ctx.tb_invalidated_flag = 0;
                 }
+
+                AFL_QEMU_CPU_SNIPPET2;
+
                 if (qemu_loglevel_mask(CPU_LOG_EXEC)) {
                     qemu_log("Trace %p [" TARGET_FMT_lx "] %s\n",
                              tb->tc_ptr, tb->pc, lookup_symbol(tb->pc));
Only in afl-2.33b/qemu_mode/qemu-2.3.0/dtc: dtc-parser.tab.c
Only in afl-2.33b/qemu_mode/qemu-2.3.0/dtc: dtc-parser.tab.h
Only in afl-2.33b/qemu_mode/qemu-2.3.0/dtc/libfdt: libfdt.a
Only in afl-2.33b/qemu_mode/qemu-2.3.0/dtc: version_gen.h
Only in afl-2.33b/qemu_mode/qemu-2.3.0: libqemustub.a
Only in afl-2.33b/qemu_mode/qemu-2.3.0: libqemuutil.a
Only in afl-2.33b/qemu_mode/qemu-2.3.0/linux-headers: asm
diff -u -x '*.[o|d]' -x '*timestamp' -x '*.lo' -r /tmp/tmp.lR39PlUDZv/qemu-2.3.0/linux-user/elfload.c afl-2.33b/qemu_mode/qemu-2.3.0/linux-user/elfload.c
--- /tmp/tmp.lR39PlUDZv/qemu-2.3.0/linux-user/elfload.c	2015-04-27 14:08:25.000000000 +0000
+++ afl-2.33b/qemu_mode/qemu-2.3.0/linux-user/elfload.c	2019-12-07 08:24:28.875131185 +0000
@@ -28,6 +28,8 @@
 
 #define ELF_OSABI   ELFOSABI_SYSV
 
+extern abi_ulong afl_entry_point, afl_start_code, afl_end_code;
+
 /* from personality.h */
 
 /*
@@ -1889,6 +1891,8 @@
     info->brk = 0;
     info->elf_flags = ehdr->e_flags;
 
+    if (!afl_entry_point) afl_entry_point = info->entry;
+
     for (i = 0; i < ehdr->e_phnum; i++) {
         struct elf_phdr *eppnt = phdr + i;
         if (eppnt->p_type == PT_LOAD) {
@@ -1922,9 +1926,11 @@
             if (elf_prot & PROT_EXEC) {
                 if (vaddr < info->start_code) {
                     info->start_code = vaddr;
+                    if (!afl_start_code) afl_start_code = vaddr;
                 }
                 if (vaddr_ef > info->end_code) {
                     info->end_code = vaddr_ef;
+                    if (!afl_end_code) afl_end_code = vaddr_ef;
                 }
             }
             if (elf_prot & PROT_WRITE) {
diff -u -x '*.[o|d]' -x '*timestamp' -x '*.lo' -r /tmp/tmp.lR39PlUDZv/qemu-2.3.0/linux-user/syscall.c afl-2.33b/qemu_mode/qemu-2.3.0/linux-user/syscall.c
--- /tmp/tmp.lR39PlUDZv/qemu-2.3.0/linux-user/syscall.c	2015-04-27 14:08:26.000000000 +0000
+++ afl-2.33b/qemu_mode/qemu-2.3.0/linux-user/syscall.c	2019-12-07 08:24:28.879131185 +0000
@@ -227,7 +227,21 @@
 _syscall3(int,sys_rt_sigqueueinfo,int,pid,int,sig,siginfo_t *,uinfo)
 _syscall3(int,sys_syslog,int,type,char*,bufp,int,len)
 #if defined(TARGET_NR_tgkill) && defined(__NR_tgkill)
-_syscall3(int,sys_tgkill,int,tgid,int,pid,int,sig)
+
+extern unsigned int afl_forksrv_pid;
+
+static int sys_tgkill(int tgid, int pid, int sig) {
+
+  /* Workaround for -lpthread to make abort() work properly, without
+     killing the forkserver due to a prematurely cached PID. */
+
+  if (afl_forksrv_pid && afl_forksrv_pid == pid && sig == SIGABRT)
+    pid = tgid = getpid();
+
+  return syscall(__NR_sys_tgkill, pid, tgid, sig);
+
+}
+
 #endif
 #if defined(TARGET_NR_tkill) && defined(__NR_tkill)
 _syscall2(int,sys_tkill,int,tid,int,sig)
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman: aclocal.m4
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman: autom4te.cache
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman: compile
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman: config.guess
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman: config.h
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman: config.h.in
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman: config.log
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman: config.status
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman: config.sub
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman: configure
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/demos: .deps
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/demos: Makefile
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/demos: Makefile.in
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman: depcomp
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman: install-sh
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman: libtool
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman: ltmain.sh
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman: Makefile
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman: Makefile.in
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman: missing
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/pixman: .deps
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/pixman: libpixman-1.la
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/pixman: libpixman-mmx.la
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/pixman: libpixman-sse2.la
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/pixman: libpixman-ssse3.la
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/pixman: .libs
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/pixman: Makefile
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/pixman: Makefile.in
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/pixman: pixman-version.h
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman: pixman-1.pc
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman: pixman-1-uninstalled.pc
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman: stamp-h1
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: a1-trap-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: affine-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: alpha-loop
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: alphamap
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: blitters-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: check-formats
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: combiner-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: composite
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: composite-traps-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: .deps
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: fetch-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: glyph-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: gradient-crash-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: infinite-loop
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: .libs
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: libutils.la
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: lowlevel-blt-bench
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: Makefile
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: Makefile.in
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: matrix-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: oob-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: pdf-op-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: pixel-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: prng-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: radial-perf-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: region-contains-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: region-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: region-translate-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: rotate-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: scaling-bench
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: scaling-crash-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: scaling-helpers-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: scaling-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: stress-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: thread-test
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman/test: trap-crasher
Only in afl-2.33b/qemu_mode/qemu-2.3.0/pixman: test-driver
Only in afl-2.33b/qemu_mode/qemu-2.3.0: qapi-event.c
Only in afl-2.33b/qemu_mode/qemu-2.3.0: qapi-event.h
Only in afl-2.33b/qemu_mode/qemu-2.3.0: qapi-generated
Only in afl-2.33b/qemu_mode/qemu-2.3.0: qapi-types.c
Only in afl-2.33b/qemu_mode/qemu-2.3.0: qapi-types.h
Only in afl-2.33b/qemu_mode/qemu-2.3.0: qapi-visit.c
Only in afl-2.33b/qemu_mode/qemu-2.3.0: qapi-visit.h
Only in afl-2.33b/qemu_mode/qemu-2.3.0: qemu-bridge-helper
Only in afl-2.33b/qemu_mode/qemu-2.3.0: qemu-ga
Only in afl-2.33b/qemu_mode/qemu-2.3.0: qemu-img
Only in afl-2.33b/qemu_mode/qemu-2.3.0: qemu-img-cmds.h
Only in afl-2.33b/qemu_mode/qemu-2.3.0: qemu-io
Only in afl-2.33b/qemu_mode/qemu-2.3.0: qemu-nbd
Only in afl-2.33b/qemu_mode/qemu-2.3.0: qemu-options.def
Only in afl-2.33b/qemu_mode/qemu-2.3.0/qga: qapi-generated
Only in afl-2.33b/qemu_mode/qemu-2.3.0: qmp-commands.h
Only in afl-2.33b/qemu_mode/qemu-2.3.0/roms/seabios: config.mak
Only in afl-2.33b/qemu_mode/qemu-2.3.0/roms/vgabios: config.mak
diff -u -x '*.[o|d]' -x '*timestamp' -x '*.lo' -r /tmp/tmp.lR39PlUDZv/qemu-2.3.0/target-i386/cc_helper.c afl-2.33b/qemu_mode/qemu-2.3.0/target-i386/cc_helper.c
--- /tmp/tmp.lR39PlUDZv/qemu-2.3.0/target-i386/cc_helper.c	2015-04-27 14:08:27.000000000 +0000
+++ afl-2.33b/qemu_mode/qemu-2.3.0/target-i386/cc_helper.c	2019-12-07 16:01:04.415557271 +0000
@@ -92,6 +92,25 @@
 {
     return (src1 & ~(CC_C | CC_O)) | (dst * CC_C) | (src2 * CC_O);
 }
+#include "../patches/afl-common.h" // to call afl_maybe_log
+target_ulong helper_weaken(target_ulong pc, target_ulong src1, target_ulong src2)
+{
+// helper function for weakening strong constraint with 4 byte
+    if((src1&0xff)==(src2&0xff)){
+	afl_maybe_log(pc+1); // in each branch make afl_area_ptr 
+			     // update to make input to have much possibility to make crash
+	if((src1&0xff00)==(src2&0xff00)){
+	    afl_maybe_log(pc+2);
+	    if((src1&0xff0000)==(src2&0xff0000)){
+		afl_maybe_log(pc+3);
+		if((src1&0xff000000)==(src2&0xff000000)){
+		    afl_maybe_log(pc+4);
+		}
+	    }
+	}	
+    }
+    return src1;
+}
 
 target_ulong helper_cc_compute_all(target_ulong dst, target_ulong src1,
                                    target_ulong src2, int op)
diff -u -x '*.[o|d]' -x '*timestamp' -x '*.lo' -r /tmp/tmp.lR39PlUDZv/qemu-2.3.0/target-i386/helper.h afl-2.33b/qemu_mode/qemu-2.3.0/target-i386/helper.h
--- /tmp/tmp.lR39PlUDZv/qemu-2.3.0/target-i386/helper.h	2015-04-27 14:08:27.000000000 +0000
+++ afl-2.33b/qemu_mode/qemu-2.3.0/target-i386/helper.h	2019-12-07 15:57:20.848881675 +0000
@@ -1,3 +1,5 @@
+DEF_HELPER_FLAGS_3(weaken, TCG_CALL_NO_SIDE_EFFECTS, tl, tl, tl, tl) // helper function declaration
+
 DEF_HELPER_FLAGS_4(cc_compute_all, TCG_CALL_NO_RWG_SE, tl, tl, tl, tl, int)
 DEF_HELPER_FLAGS_4(cc_compute_c, TCG_CALL_NO_RWG_SE, tl, tl, tl, tl, int)
 
diff -u -x '*.[o|d]' -x '*timestamp' -x '*.lo' -r /tmp/tmp.lR39PlUDZv/qemu-2.3.0/target-i386/translate.c afl-2.33b/qemu_mode/qemu-2.3.0/target-i386/translate.c
--- /tmp/tmp.lR39PlUDZv/qemu-2.3.0/target-i386/translate.c	2015-04-27 14:08:27.000000000 +0000
+++ afl-2.33b/qemu_mode/qemu-2.3.0/target-i386/translate.c	2019-12-07 15:57:02.200881909 +0000
@@ -33,7 +33,7 @@
 #include "exec/helper-gen.h"
 
 #include "trace-tcg.h"
-
+//#include "../patches/afl-common.h"
 
 #define PREFIX_REPZ   0x01
 #define PREFIX_REPNZ  0x02
@@ -1098,6 +1098,7 @@
    A translation block must end soon.  */
 static inline void gen_jcc1(DisasContext *s, int b, TCGLabel *l1)
 {
+    
     CCPrepare cc = gen_prepare_cc(s, b, cpu_T[0]);
 
     gen_update_cc_op(s);
@@ -1228,7 +1229,7 @@
                                    target_ulong cur_eip,                      \
                                    target_ulong next_eip,                     \
                                    int nz)                                    \
-{                                                                             \
+{									      \
     TCGLabel *l2;                                                             \
     gen_update_cc_op(s);                                                      \
     l2 = gen_jz_ecx_string(s, next_eip);                                      \
@@ -1365,8 +1366,11 @@
     case OP_CMPL:
         tcg_gen_mov_tl(cpu_cc_src, cpu_T[1]);
         tcg_gen_mov_tl(cpu_cc_srcT, cpu_T[0]);
+	TCGv_i64 temp = tcg_const_i64(s1->pc); // get pc of DisasContext
+	gen_helper_weaken(cpu_T[0],temp,cpu_T[0],cpu_T[1]); // call helper function
         tcg_gen_sub_tl(cpu_cc_dst, cpu_T[0], cpu_T[1]);
         set_cc_op(s1, CC_OP_SUBB + ot);
+	tcg_temp_free_i64(temp);
         break;
     }
 }
@@ -6533,6 +6537,7 @@
         if (dflag == MO_16) {
             tval &= 0xffff;
         }
+	
         gen_jcc(s, b, tval, next_eip);
         break;
 
diff -u -x '*.[o|d]' -x '*timestamp' -x '*.lo' -r /tmp/tmp.lR39PlUDZv/qemu-2.3.0/tcg/tcg-op.c afl-2.33b/qemu_mode/qemu-2.3.0/tcg/tcg-op.c
--- /tmp/tmp.lR39PlUDZv/qemu-2.3.0/tcg/tcg-op.c	2015-04-27 14:08:27.000000000 +0000
+++ afl-2.33b/qemu_mode/qemu-2.3.0/tcg/tcg-op.c	2019-12-07 15:53:02.888884905 +0000
@@ -827,6 +827,10 @@
     tcg_gen_st_i32(TCGV_HIGH(arg1), arg2, offset + 4);
 #endif
 }
+void tcg_gen_weaken_i64(TCGv_i64 arg1, TCGv_i64 arg2)
+{
+    gen_helper_weaken_i64(arg1, arg2);
+}
 
 void tcg_gen_and_i64(TCGv_i64 ret, TCGv_i64 arg1, TCGv_i64 arg2)
 {
@@ -1112,10 +1116,10 @@
 {
     if (cond == TCG_COND_ALWAYS) {
         tcg_gen_br(l);
-    } else if (cond != TCG_COND_NEVER) {
-        TCGv_i64 t0 = tcg_const_i64(arg2);
-        tcg_gen_brcond_i64(cond, arg1, t0, l);
-        tcg_temp_free_i64(t0);
+    } else if (cond != TCG_COND_NEVER) {	
+	TCGv_i64 t0 = tcg_const_i64(arg2);
+	tcg_gen_brcond_i64(cond, arg1, t0, l);
+	tcg_temp_free_i64(t0);
     }
 }
 
diff -u -x '*.[o|d]' -x '*timestamp' -x '*.lo' -r /tmp/tmp.lR39PlUDZv/qemu-2.3.0/tcg/tcg-runtime.h afl-2.33b/qemu_mode/qemu-2.3.0/tcg/tcg-runtime.h
--- /tmp/tmp.lR39PlUDZv/qemu-2.3.0/tcg/tcg-runtime.h	2015-04-27 14:08:27.000000000 +0000
+++ afl-2.33b/qemu_mode/qemu-2.3.0/tcg/tcg-runtime.h	2019-12-07 15:53:21.284884675 +0000
@@ -14,3 +14,5 @@
 
 DEF_HELPER_FLAGS_2(mulsh_i64, TCG_CALL_NO_RWG_SE, s64, s64, s64)
 DEF_HELPER_FLAGS_2(muluh_i64, TCG_CALL_NO_RWG_SE, i64, i64, i64)
+
+
Only in afl-2.33b/qemu_mode/qemu-2.3.0/tests/qemu-iotests: common.env
Only in afl-2.33b/qemu_mode/qemu-2.3.0/tests/qemu-iotests: socket_scm_helper
Only in afl-2.33b/qemu_mode/qemu-2.3.0/tests: test-qapi-event.h
Only in afl-2.33b/qemu_mode/qemu-2.3.0/tests: test-qapi-types.h
Only in afl-2.33b/qemu_mode/qemu-2.3.0/tests: test-qapi-visit.h
Only in afl-2.33b/qemu_mode/qemu-2.3.0/tests: test-qmp-commands.h
Only in afl-2.33b/qemu_mode/qemu-2.3.0/trace: generated-events.c
Only in afl-2.33b/qemu_mode/qemu-2.3.0/trace: generated-events.h
Only in afl-2.33b/qemu_mode/qemu-2.3.0/trace: generated-helpers.h
Only in afl-2.33b/qemu_mode/qemu-2.3.0/trace: generated-helpers-wrappers.h
Only in afl-2.33b/qemu_mode/qemu-2.3.0/trace: generated-tcg-tracers.h
Only in afl-2.33b/qemu_mode/qemu-2.3.0/trace: generated-tracers.h
diff -u -x '*.[o|d]' -x '*timestamp' -x '*.lo' -r /tmp/tmp.lR39PlUDZv/qemu-2.3.0/translate-all.c afl-2.33b/qemu_mode/qemu-2.3.0/translate-all.c
--- /tmp/tmp.lR39PlUDZv/qemu-2.3.0/translate-all.c	2015-04-27 14:08:29.000000000 +0000
+++ afl-2.33b/qemu_mode/qemu-2.3.0/translate-all.c	2019-12-07 08:24:28.879131185 +0000
@@ -393,8 +393,13 @@
     /* We can't use g_malloc because it may recurse into a locked mutex. */
 # define ALLOC(P, SIZE)                                 \
     do {                                                \
-        P = mmap(NULL, SIZE, PROT_READ | PROT_WRITE,    \
-                 MAP_PRIVATE | MAP_ANONYMOUS, -1, 0);   \
+      void* _tmp = mmap(NULL, SIZE, PROT_READ | PROT_WRITE, \
+                        MAP_PRIVATE | MAP_ANONYMOUS, -1, 0); \
+      if (_tmp == (void*)-1) { \
+        qemu_log(">>> Out of memory for stack, bailing out. <<<\n"); \
+        exit(1); \
+      } \
+      (P) = _tmp; \
     } while (0)
 #else
 # define ALLOC(P, SIZE) \
Only in afl-2.33b/qemu_mode/qemu-2.3.0: x86_64-linux-user
Only in afl-2.33b/qemu_mode: README.qemu
